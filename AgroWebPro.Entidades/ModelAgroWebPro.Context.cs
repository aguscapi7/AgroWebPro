//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgroWebPro.Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AgroWebProEntities : DbContext
    {
        public AgroWebProEntities()
            : base("name=AgroWebProEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<PA_ConsultarZonasHorarias_Result> PA_ConsultarZonasHorarias(ObjectParameter estado, ObjectParameter mensaje)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_ConsultarZonasHorarias_Result>("PA_ConsultarZonasHorarias", estado, mensaje);
        }
    
        public virtual int PA_MantenimientoEmpresa(Nullable<int> tipoOperacion, Nullable<System.Guid> idEmpresa, string nombreEmpresa, string descripcionEmpresa, string telefono, string cedulaJuridica, Nullable<decimal> diferenciaUTC, string direccion, Nullable<bool> activa, ObjectParameter estado, ObjectParameter mensaje)
        {
            var tipoOperacionParameter = tipoOperacion.HasValue ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(System.Guid));
    
            var nombreEmpresaParameter = nombreEmpresa != null ?
                new ObjectParameter("NombreEmpresa", nombreEmpresa) :
                new ObjectParameter("NombreEmpresa", typeof(string));
    
            var descripcionEmpresaParameter = descripcionEmpresa != null ?
                new ObjectParameter("DescripcionEmpresa", descripcionEmpresa) :
                new ObjectParameter("DescripcionEmpresa", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var cedulaJuridicaParameter = cedulaJuridica != null ?
                new ObjectParameter("CedulaJuridica", cedulaJuridica) :
                new ObjectParameter("CedulaJuridica", typeof(string));
    
            var diferenciaUTCParameter = diferenciaUTC.HasValue ?
                new ObjectParameter("DiferenciaUTC", diferenciaUTC) :
                new ObjectParameter("DiferenciaUTC", typeof(decimal));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var activaParameter = activa.HasValue ?
                new ObjectParameter("Activa", activa) :
                new ObjectParameter("Activa", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_MantenimientoEmpresa", tipoOperacionParameter, idEmpresaParameter, nombreEmpresaParameter, descripcionEmpresaParameter, telefonoParameter, cedulaJuridicaParameter, diferenciaUTCParameter, direccionParameter, activaParameter, estado, mensaje);
        }
    
        public virtual int PA_MantenimientoUsuario(Nullable<int> tipoOperacion, Nullable<System.Guid> idUsuario, string nombre, string apellidos, string correo, string password, string direccion, string telefono, Nullable<System.Guid> ingresadoPor, Nullable<System.Guid> rol, Nullable<bool> activo, ObjectParameter estado, ObjectParameter mensaje)
        {
            var tipoOperacionParameter = tipoOperacion.HasValue ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(System.Guid));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var ingresadoPorParameter = ingresadoPor.HasValue ?
                new ObjectParameter("IngresadoPor", ingresadoPor) :
                new ObjectParameter("IngresadoPor", typeof(System.Guid));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(System.Guid));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_MantenimientoUsuario", tipoOperacionParameter, idUsuarioParameter, nombreParameter, apellidosParameter, correoParameter, passwordParameter, direccionParameter, telefonoParameter, ingresadoPorParameter, rolParameter, activoParameter, estado, mensaje);
        }
    }
}
