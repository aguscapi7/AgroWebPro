@model AgroWebPro.Web.Models.ReporteModels
@{
    ViewBag.Title = "Cosechas";
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />
<link href="~/Content/reportes.css" rel="stylesheet" />

<div class="row">
    <br>
    <nav class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <div class="">
                <div class="row" style="padding-right:10px;">
                    <div class="col-md-9">
                        <h3 style="margin-left:10px;"><span class="fa fa-tasks fa-lg"></span>&nbsp;Reporte&nbsp;<span id="tituloMantenimiento">/ Cosechas </span></h3>
                    </div>
                    <div class="col-md-3" style="margin:10px 0px 10px 0px;">
                        <label>Tipo de reporte:</label>
                        <select id="ddlTipoReporte" class="form-control" onchange="CambiarReporte()" style="margin-right:10px;"><option value="1">Reporte de tareas</option><option value="2" selected>Reporte de cosechas</option></select>
                    </div>
                </div>

            </div>
        </div>
    </nav>
</div>
@using (Html.BeginForm("Cosechas", "Reporte", FormMethod.Post, new { id = "formReporte", role = "form", @data_toggle = "validator" }))
{
    <div class="form-group">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.fechaInicio)
                @Html.TextBoxFor(model => model.fechaInicio, new { @id = "txtFechaInicio", @readonly = "readonly", @class = "form-control", @required = "required", @placeholder = "Nombre", value = DateTime.Now.ToShortDateString() })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.fechaFin)
                @Html.TextBoxFor(model => model.fechaFin, new { @id = "txtFechaFinalizacion", @readonly = "readonly", @class = "form-control", @required = "required", @placeholder = "Nombre" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.idCultivo)<br />
                @Html.DropDownListFor(model => model.idCultivo, new SelectList(Model.listaCultivosEmpresa, "idCultivo", "nombreCultivo"), new { @id = "ddlCultivos", @class = "form-control" })
            </div>
        </div>
        <div class="row" style="margin-top:10px;">
            <div class="col-md-10"></div>
            <div class="col-md-2 ">
                <button class="btn btn-orange pull-right" id="btnBuscar" type="submit">Buscar&nbsp;<span class="fa fa-search"></span></button>
            </div>
        </div>
    </div>
}

<div class="form-group" id="divTablaTareas">
    <div class="row">
        <div class="col-md-12">
            <div class="table-responsive">
                
                    
                    <table class="table table-sm" id="tblResultado" data-show-toggle="true" data-search="true"
                           data-show-export="true"
                           data-minimum-count-columns="2"
                           data-show-pagination-switch="true"
                           data-pagination="true"
                           data-page-list="[10, 25, 50, 100, ALL]"
                           data-locale="es-CR"
                           data-url="ReporteCosechas.json">
                        <thead class="thead-dark">
                            <tr>
                                <th data-field="Terreno">Cultivo</th>
                                <th data-field="Empleado">Empleado</th>
                                <th data-field="FechaRecoleccion">Fecha de recolección</th>
                                <th data-field="KgPrimera">Kg de primera categoría</th>
                                <th data-field="KgSegunda">Kg de segunda categoría</th>
                                <th data-field="KgRechazo">Kg de rechazo</th>
                                <th data-field="Resumen">Causa rechazo</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.listaCosechas != null && Model.listaCosechas.Count() > 0)
                            {
                                foreach (var itemTarea in Model.listaCosechas)
                                {
                                    <tr>
                                        <td>@itemTarea.nombreCultivo</td>
                                        <td>@itemTarea.nombreUsuario @itemTarea.apellidosUsuario</td>
                                        <td>@itemTarea.fechaRecoleccion</td>
                                        <td>@itemTarea.kilogramosPrimera.ToString().Replace(',','.')</td>
                                        <td>@itemTarea.kilogramosSegunda.ToString().Replace(',', '.')</td>
                                        <td>@itemTarea.kilogramosRechazo.ToString().Replace(',', '.')</td>
                                        <td>@itemTarea.causaRechazo</td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="8"><center>No hay datos disponibles</center></td></tr>
                            }

                        </tbody>
                    </table>
                    @if (Model.listaCosechas != null && Model.listaCosechas.Count() > 0)
                    {
                        <div id="divExportarExcel">
                            <a href="#" class="btn btn-success" onclick="$('#tblResultado').tableExport({type:'excel',
                                                             excelFileFormat:'xmlss',
                                                             worksheetName: ['Table 1'],
                                                             fileName: 'ReporteCosechas@(DateTime.Now.ToString("-dd-MM-yyyy_HHmm"))'});">
                                &nbsp;Exportar a Excel&nbsp;<span><i class="fa fa-save"></i></span>
                            </a>
                            <a href="#" class="btn btn-info" onclick="$('#tblResultado').tableExport({type:'pdf',pdfmake:{enabled:true},fileName: 'ReporteCosechas@(DateTime.Now.ToString("-dd-MM-yyyy_HHmm"))'});">
                                &nbsp;Exportar a PDF&nbsp;<span><i class="fa fa-save"></i></span>
                            </a>
                        </div>
                    }
                    
            </div>
        </div>
    </div>
</div>





<script src="~/Scripts/Chart.js"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<script src="~/Scripts/libs/js-xlsx/xlsx.core.min.js"></script>
<script src="~/Scripts/libs/pdfmake/pdfmake.min.js"></script>
<script src="~/Scripts/libs/pdfmake/vfs_fonts.js"></script>
<script src="~/Scripts/libs/FileSaver/FileSaver.min.js"></script>
<script src="~/Scripts/tableExport.min.js"></script>
<script>
    $('#txtFechaInicio').datepicker({
        changeMonth: true,
        changeYear: true,
        format: "dd/mm/yyyy",
        todayBtn: "linked"
    }).on('changeDate', function (e) {
        $(this).datepicker('hide');
    });

    $('#txtFechaFinalizacion').datepicker({
        changeMonth: true,
        changeYear: true,
        format: "dd/mm/yyyy",
        todayBtn: "linked"
    }).on('changeDate', function (e) {
        $(this).datepicker('hide');
        });


    function CambiarReporte() {
        var seleccionado = $("#ddlTipoReporte").val();
        if (seleccionado == 1) {
            window.location.href = "@Url.Action("General","Reporte")";
        }
    }

    Chart.defaults.global.defaultFontFamily = '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
    Chart.defaults.global.defaultFontColor = '#292b2c';

    var ctx = document.getElementById("myAreaChart");
    var myLineChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: ["Mar 1", "Mar 2", "Mar 3", "Mar 4", "Mar 5", "Mar 6", "Mar 7", "Mar 8", "Mar 9", "Mar 10", "Mar 11", "Mar 12", "Mar 13"],
            datasets: [{
                label: "Sessions",
                lineTension: 0.3,
                backgroundColor: "rgba(2,117,216,0.2)",
                borderColor: "rgba(2,117,216,1)",
                pointRadius: 5,
                pointBackgroundColor: "rgba(2,117,216,1)",
                pointBorderColor: "rgba(255,255,255,0.8)",
                pointHoverRadius: 5,
                pointHoverBackgroundColor: "rgba(2,117,216,1)",
                pointHitRadius: 20,
                pointBorderWidth: 2,
                data: [10000, 30162, 26263, 18394, 18287, 28682, 31274, 33259, 25849, 24159, 32651, 31984, 38451],
            }],
        },
        options: {
            scales: {
                xAxes: [{
                    time: {
                        unit: 'date'
                    },
                    gridLines: {
                        display: false
                    },
                    ticks: {
                        maxTicksLimit: 7
                    }
                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 40000,
                        maxTicksLimit: 5
                    },
                    gridLines: {
                        color: "rgba(0, 0, 0, .125)",
                    }
                }],
            },
            legend: {
                display: false
            }
        }
    });
</script>