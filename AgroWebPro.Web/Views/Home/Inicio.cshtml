@model AgroWebPro.Web.Models.EmpresaModels
@using AgroWebPro.Utilitarios;
@{
    ViewBag.Title = "Inicio";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/leaflet.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/leaflet-src.js"></script>
<link href="~/Content/reportes.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />

<script>
    debugger;
    var coordenadasTerrenos = "@(Html.Raw(Model.coordenadasTerrenos))";
    var listaCoordenadas = coordenadasTerrenos.split('|');
</script>
    
<div class="row">
    <br>
    <nav class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <div class="navbar-header">
                <h3 style="margin-left:10px;"><span class="fa fa-home fa-lg"></span>&nbsp;<span id="tituloMantenimiento">Bienvenido, @Html.Raw(Model.usuario.nombre)</span></h3>
            </div>
        </div>
    </nav>
</div>
@if (Request.Cookies["usuario"] != null && Request.Cookies["usuario"]["rol"] != null && Request.Cookies["usuario"]["rol"].ToString().Equals("57bcde54-9b6d-417f-a58a-451ab43431cd"))
{

    if (Model.listaTareasUsuario != null && Model.listaTareasUsuario.Count > 0)
    {
        <h3>Tareas pendientes</h3>
        foreach (var item in Model.listaTareasUsuario)
        {
            <div class="well well-lg">
                <h3>Información general</h3>
                <div class="row">
                    <div class="col-md-3">
                        <label>Fechas:</label>
                        <p>Inicia @item.fechaInicio y finaliza @item.fechaFinalizacion</p>
                    </div>
                    <div class="col-md-3">
                        <label>Terreno:</label>
                        <p>@item.nombreTerreno</p>
                    </div>
                    <div class="col-md-3">
                        <label>Tipo de tarea:</label>
                        <p>@item.nombreTipoTarea</p>
                    </div>
                    <div class="col-md-3">
                        <label>Horas estimadas:</label>
                        <p>@item.horasEstimadas</p>
                    </div>
                </div>

                <h3>Descripción de la tarea</h3>
                <div></div>
                <p>@item.resumen</p>
                @if (!string.IsNullOrEmpty(item.observaciones))
                {   <br />
                    <p>@item.observaciones</p>
                }
                <button class="btn btn-orange" onclick="AbrirAvance('@Url.Action("RedireccionarAvanceTarea", "Tarea", new { idTarea = item.idTarea })')">Realizar avance</button>
            </div>
        }
    }
    else
    {
        <div class="alert alert-success"><center><h3><strong>No tiene tareas pendientes</strong></h3></center></div>
    }

}
else if (Request.Cookies["usuario"] != null && Request.Cookies["usuario"]["rol"] != null && !Request.Cookies["usuario"]["rol"].ToString().Equals("57bcde54-9b6d-417f-a58a-451ab43431cd"))
{
    <div class="row">
        <div class="col-lg-8">
            <div id="map" style="height:580px;"></div>

        </div>
        <div class="col-lg-4">
            <!-- Example Pie Chart Card-->
            <div class="card mb-3">
                <div class="card-header">
                    <i class="fa fa-pie-chart"></i> Resumen de tareas&nbsp;

                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <label>Periodo</label>
                            <select id="ddlTiempo" onchange="CargarTareas()" class="form-control">
                                <option value="1" selected>Día</option>
                                <option value="2">Semana</option>
                                <option value="3">Mes</option>
                                <option value="4">Año</option>
                            </select>
                        </div>
                        <div class="col-md-6" onchange="CargarTareas()">
                            <label>Terreno</label>
                            @Html.DropDownListFor(m => Model.idTerreno, new SelectList(Model.listaTerrenosEmpresa, "IdTerreno", "NombreTerreno", Guid.Empty.ToString()), new { @id = "ddlTerrenos", @class = "form-control" })
                        </div>
                    </div>

                    <div id="divContenedor">
                        <canvas id="canvasGrafico" width="100%" height="150"></canvas>
                    </div>
                    <br />
                    <div id="divSinDatos" class="alert alert-warning hidden">
                        <p><center><strong>No hay datos disponibles</strong></center></p>
                    </div>
                </div>
                <div class="card-footer small text-muted"></div>
            </div>
        </div>
    </div>
}



<script src="~/Scripts/Chart.js"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<script>

    var ctx = document.getElementById("canvasGrafico");

    function AbrirAvance(enlace) {
        window.location.href = enlace;
    }

    function AgregarTarea(enlace) {
        window.location.href = '@Url.Action("Mantenimiento", "Tarea")';
    }

    CargarTareas();

    function CargarTareas() {
        var parametros = {
            tiempo: $("#ddlTiempo").val(),
            idTerreno: $("#ddlTerrenos").val()
        };
        $.ajax({
            dataType: "json",
            type: "POST",
            url: '@Url.Action("ResumenTareas", "Reporte")',
            data: parametros,
            success: function (data) {
                if (data.respuesta == '@Constantes.EstadoCorrecto' && data.agrupada.length > 0)
                {
                    $('#canvasGrafico').remove(); // this is my <canvas> element
                    $('#divContenedor').append('<canvas id="canvasGrafico" width="100%" height="150"><canvas>');
                    ctx = document.getElementById("canvasGrafico");

                    $("#divSinDatos").addClass("hidden");
                    $("#canvasGrafico").removeClass("hidden");
                    var cantidades = [0, 0, 0, 0];
                    for (var i = 0; i < data.agrupada.length; i++) {
                        cantidades[data.agrupada[i][0].idEstadoTarea] = data.agrupada[i].length;
                    }
                    var canvasGrafico = new Chart(ctx, {
                        type: 'pie',
                        data: {
                            labels: ["Sin iniciar", "Iniciadas", "En proceso", "Finalizadas"],
                            datasets: [{
                                data: cantidades,
                                backgroundColor: ['#dc3545', '#007bff', '#ffc107', '#28a745'],
                            }],
                        },
                    });
                }
                else {                    
                    $("#canvasGrafico").addClass("hidden");
                    $("#divSinDatos").removeClass("hidden");
                }

            }
        });
    }


    var osmUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
        osmAttrib = '&copy; <a href="http://openstreetmap.org/copyright">OpenStreetMap</a> contributors',
        osm = L.tileLayer(osmUrl, { maxZoom: 29, attribution: osmAttrib });
    var map = L.map('map').setView([9.842405, -83.9317569], 29),
        drawnItems = new L.FeatureGroup().addTo(map);

    L.tileLayer(osmUrl, {
        attribution: ''
    }).addTo(map);

    CargarTerrenos();

    function CargarTerrenos()
    {
        for (var i = 0; i < listaCoordenadas.length; i++) {
            if (listaCoordenadas[i] != "")
            {
                DeserealizarXML(listaCoordenadas[i]);
            }
        }
    }

    function DeserealizarXML(contenido) {

        var xmlDoc = $.parseXML(contenido),
            $xml = $(xmlDoc),
            $coordenadas = $xml.find("coordenada");
        var coor = [];
        if ($coordenadas.length > 0) {
            map.setView([$($coordenadas[0].childNodes[0]).html(), $($coordenadas[0].childNodes[1]).html()], 18);
            var nombreTerreno = "";
            for (var i = 0; i < $coordenadas.length; i++) {
                nombreTerreno = $($coordenadas[i].childNodes[3]).html();
                coor.push([$($coordenadas[i].childNodes[0]).html(), $($coordenadas[i].childNodes[1]).html()]);
            }
            var polygon = L.polygon(coor);
            var contenido = '<div><div class="row">' +
                '<div class="col-lg-12"><h4>' + nombreTerreno + '</h4></div>' +
                '<div class="row" style="margin-top:20px">' +
                '<div class="col-lg-12"><button class="btn btn-primary btn-sm" onclick="AgregarTarea()">Agregar tarea<span class="fa fa-plus" style="margin-left:20px;"></span></button></div>' +
                '</div>';
            polygon.bindPopup(
                contenido
                , { maxWidth: "auto" }
            );
            polygon.addTo(L.featureGroup().addTo(map));

        }

    }

</script>


