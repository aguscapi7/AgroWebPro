@model AgroWebPro.Web.Models.MovimientoModels
@using AgroWebPro.Utilitarios;
@{
    ViewBag.Title = "Ingresos y gastos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="~/Content/fullcalendar.min.css" rel="stylesheet" />
<script src="~/Scripts/moment.min.js"></script>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<link href="~/Content/sweetalert.css" rel="stylesheet" />
<script src="~/Scripts/sweetalert.js"></script>

<link href="~/Content/bootstrap-table.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-table.js"></script>
<script src="~/Scripts/bootstrap-table-locale-all.min.js"></script>
<div class="row">
    <br>
    <nav class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <div class="navbar-header">
                <h3  style="margin-left:10px;"><span class="fa fa-money fa-lg"></span>&nbsp;<span id="tituloMantenimiento">Ingresos/Gastos</span></h3>
            </div>
        </div>
    </nav>
</div>
@using (Html.BeginForm("Mantenimiento", "Cuentas", FormMethod.Post, new { id = "formMovimiento", role = "form", @data_toggle = "validator" }))
{
    @Html.AntiForgeryToken();
    @Html.ValidationSummary(true);

    <div class="form-group @(Model.errorValidacion ? "" : "hidden")" id="divMantenimiento">
        @Html.HiddenFor(m => m.idMovimiento, new { @id = "hdnIdMovimiento" })
        <div class="row form-group">
            <div class="col-md-4">
                @Html.LabelFor(model => model.fecha)                
                @Html.TextBoxFor(model => model.fecha, new { @id = "txtFecha", @readonly = "readonly", @class = "form-control", @required = "required", value = Model.fechaActual })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.idCategoriaMovimiento, new { @id = "lblTipoCategoriaMovimiento" })<br />
                <select id="ddlCategoriasMovimiento" class="form-control" name="idCategoriaMovimiento">
                    @if (Model.listaCategoriasMovimiento != null)
                    {
                        <option value="@Guid.Empty">Seleccione</option>
                        foreach (var item in Model.listaCategoriasMovimiento)
                        {
                            <option value="@item.idCategoriaMovimiento" data-ingreso="@(item.ingreso ? 1 : 0)" class="opcionCategoria">@item.nombreCategoria</option>
                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.idCategoriaMovimiento, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.monto)
                @Html.TextBoxFor(model => model.monto, new { @id = "txtMonto", @class = "form-control", @placeholder = "Monto" })
                @Html.ValidationMessageFor(model => model.monto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            <div class="col-md-12">
                @Html.LabelFor(model => model.observaciones)
                @Html.TextAreaFor(model => model.observaciones, new { @id = "txtObservaciones", @class = "form-control", @placeholder = "Observaciones" })
            </div>
        </div>
        @Html.TextBoxFor(model => model.ingreso, new { @id = "hdnIngreso", @class = "form-control hidden" })
        @Html.TextBoxFor(model => model.annioSeleccionado, new { @id = "hdnAnnioSeleccionado", @class = "form-control hidden" })
        @Html.TextBoxFor(model => model.mesSeleccionado, new { @id = "hdnMesSeleccionado", @class = "form-control hidden" })

        
        <br />
        <div class="row">
            <div class="col-md-8"></div>
            <div class="col-md-4">
                <button class="btn btn-danger pull-right" id="btnCancelar" type="button" onclick="Cancelar()">Cancelar</button>
                <button id="btnGuardar" name="btnGuardar" class="btn btn-primary pull-right btn-guardar" type="submit">Guardar</button>
            </div>
        </div>
    </div>


}

<div class="form-group @(Model.errorValidacion ? "hidden":"")" id="divTablas">
    <center><h3 id="titulo"> @Model.nombreMes @Model.annioSeleccionado&nbsp;<span id="mostrarFecha" style="cursor:pointer;" onclick="CambiarIcono(this)" data-abierto="false"><i class="fa fa-chevron-down"></i></span></h3></center>
    <div id="container" style="width: 100%;" height="350">
        <canvas id="canvas"></canvas>
    </div>
    <hr />
    <br />
    <center>
        <div id="vistas" class="btn-group" data-toggle="buttons" style="margin-bottom:15px;">
            <label id="lblAbono" class="btn btn-default active" style="margin-right:0px;">
                <input type="radio" name="btnAbono" id="btnVistaGeneral" value="ingresos">Ingresos
            </label>
            <label id="lblAdelanto" class="btn btn-default">
                <input type="radio" name="btnAdelanto" id="btnVistaAgrupada" value="gastos">Gastos
            </label>
        </div>
    </center>
    <br />
    <br />
    <div id="divIngresos">

        <div class="row">
            <div class="col-md-12"><button class="btn btn-orange" onclick="MostrarDivMantenimiento(1)">Agregar&nbsp;<span class="fa fa-plus"></span></button></div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-12">
                <div class="table-responsive">
                    <table class="table table-sm" data-show-toggle="true" data-search="true"
                           data-show-export="true"
                           data-minimum-count-columns="2"
                           data-show-pagination-switch="true"
                           data-pagination="true"
                           data-page-list="[10, 25, 50, 100, ALL]"
                           data-locale="es-CR">
                        <thead class="thead-dark">
                            <tr>
                                <th>Fecha</th>
                                <th>Tipo de ingreso</th>
                                <th>Monto</th>
                                <th>Observaciones</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.listaIngresos != null && Model.listaIngresos.Count > 0)
                            {
                                foreach (var itemIngreso in Model.listaIngresos)
                                {
                                    <tr>
                                        <td>@itemIngreso.fecha</td>
                                        <td>@itemIngreso.nombreCategoria</td>
                                        <td>@itemIngreso.monto</td>
                                        <td>@itemIngreso.observaciones</td>
                                        <td>
                                            <button class="btn btn-primary"
                                                    data-idmovimiento="@itemIngreso.idMovimiento"
                                                    data-idcategoriamovimiento="@itemIngreso.idCategoriaMovimiento"
                                                    data-observaciones="@itemIngreso.observaciones"
                                                    data-monto="@itemIngreso.monto"
                                                    data-fecha="@itemIngreso.fecha"
                                                    data-ingreso="@itemIngreso.ingreso.ToString().ToLower()"
                                                    onclick="CargarDatosMovimiento(this)">
                                                <span class="fa fa-pencil"></span>
                                            </button>
                                            <button class="btn btn-danger" onclick="EliminarMovimientoPaso1('@itemIngreso.idMovimiento',1)"><span class="fa fa-trash"></span> </button>&nbsp;
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr><td colspan="5"><center>Aún no tiene ingresos este mes</center></td></tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="divGastos" class="hidden">

        <div class="row">
            <div class="col-md-12"><button class="btn btn-orange" onclick="MostrarDivMantenimiento(0)">Agregar&nbsp;<span class="fa fa-plus"></span></button></div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-12">
                <div class="table-responsive">
                    <table class="table table-sm" data-show-toggle="true" data-search="true"
                           data-show-export="true"
                           data-minimum-count-columns="2"
                           data-show-pagination-switch="true"
                           data-pagination="true"
                           data-page-list="[10, 25, 50, 100, ALL]"
                           data-locale="es-CR">
                        <thead class="thead-dark">
                            <tr>
                                <th>Fecha</th>
                                <th>Tipo de gasto</th>
                                <th>Monto</th>
                                <th>Observaciones</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.listaGastos != null && Model.listaGastos.Count > 0)
                            {
                                foreach (var itemGasto in Model.listaGastos)
                                {
                                        <tr>
                                            <td>@itemGasto.fecha</td>
                                            <td>@itemGasto.nombreCategoria</td>
                                            <td>@itemGasto.monto</td>
                                            <td>@itemGasto.observaciones</td>
                                            <td>
                                                <button class="btn btn-primary"
                                                        data-idmovimiento="@itemGasto.idMovimiento"
                                                        data-idcategoriamovimiento="@itemGasto.idCategoriaMovimiento"
                                                        data-observaciones="@itemGasto.observaciones"
                                                        data-monto="@itemGasto.monto"
                                                        data-fecha="@itemGasto.fecha"
                                                        data-ingreso="@itemGasto.ingreso.ToString().ToLower()"
                                                        onclick="CargarDatosMovimiento(this)">
                                                    <span class="fa fa-pencil"></span>
                                                </button>
                                                <button class="btn btn-danger" onclick="EliminarMovimientoPaso1('@itemGasto.idMovimiento',0)"><span class="fa fa-trash"></span> </button>&nbsp;
                                            </td>
                                        </tr>
                                    }
                            }
                            else
                            {
                                <tr><td colspan="8"><center>Aún no tiene gastos este mes</center></td></tr>
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



<script src="~/Scripts/Chart.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>
<script src="~/Scripts/jquery.numeric.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<script src="~/Scripts/jquery.numeric.js"></script>

    @if(ViewBag.respuesta != null && ViewBag.respuesta == Constantes.EstadoCorrecto)
    {
        <script>
            swal({
                title: 'Correcto',
                text: "@ViewBag.mensaje",
                type: 'success',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Aceptar'
            });</script>
    }
    else if(ViewBag.respuesta != null && ViewBag.respuesta == Constantes.EstadoError)
    {
        <script>
            swal({
                title: 'Error',
                text: "@ViewBag.mensaje",
                type: 'error',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Aceptar'
            });</script>
    }
<style>
    .margen{
        margin-left:20px;
        margin-right:20px;
    }
</style>
<script>



    $('#mostrarFecha').datepicker({
        changeMonth: true,
        changeYear: true,
        format: "mm-yyyy",
        language: "es",
        startView: "months",
        minViewMode: "months",
        orientation: 'bottom',
        autoclose: true
    }).on('changeDate', function (e) {
        $(this).datepicker('hide');
        var annio = moment(e.date.valueOf()).format('YYYY');
        var mes = moment(e.date.valueOf()).format('MM');
        CambiarMes(annio,mes);
    }).datepicker("update", "@Model.mesSeleccionado-@Model.annioSeleccionado");

    $('#txtFecha').datepicker({
        changeMonth: true,
        changeYear: true,
        format: "dd/mm/yyyy",
        startDate: "@Model.primerDia.ToString("dd/MM/yyyy")",
        endDate: "@Model.ultimoDia.ToString("dd/MM/yyyy")"
    }).on('changeDate', function (e) {
        $(this).datepicker('hide');
    });

    $('table').bootstrapTable({
        editable: true
    });


    CargarGrafico();
    function CargarGrafico() {
        var horizontalBarChartData = {
            labels: [''],
            datasets: [{
                label: 'Ingresos',
                backgroundColor: ObtenerTransparencia('#28a745'),
                borderColor: '#28a745',
                borderWidth: 1,
                data: [
                    @Model.totalIngresos
                ]
            }, {
                label: 'Gastos',
                backgroundColor: ObtenerTransparencia('#dc3545'),
                borderColor: '#dc3545',
                data: [
                    @Model.totalGastos
                ]
            }]

        };

        window.onload = function () {
            var ctx = document.getElementById('canvas').getContext('2d');
            var grafico = new Chart(ctx, {
                type: 'horizontalBar',
                data: horizontalBarChartData,
                options: {
                    elements: {
                        rectangle: {
                            borderWidth: 2,
                        }
                    },
                    responsive: true,
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: false,
                        text: 'Chart.js Horizontal Bar Chart'
                    },
                    maintainAspectRatio: false,
                    scales: {
                        xAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });

        };
    }

    function CambiarMes(annio,mes) {

        var parametros = {
            annio: annio,
            mes: mes
        };
        $.ajax({
            dataType: "json",
            type: "POST",
            url: '@Url.Action("CambiarMes", "Cuentas")',
            data: parametros,
            success: function (data) {
                window.location.href = window.location.href;
            }
        });
    }


    function ObtenerTransparencia(color) {
        var rgbaCol = 'rgba(' + parseInt(color.slice(-6, -4), 16)
            + ',' + parseInt(color.slice(-4, -2), 16)
            + ',' + parseInt(color.slice(-2), 16)
            + ',0.5)';
        return rgbaCol;
    }

    $('#vistas :input').change(function () {
        var valor = $(this).val();
        if (valor === 'gastos') {
           $("#btnIngresos").removeClass("active");
            $("#btnIngresos").removeClass("btn-basic");
            $("#btnIngresos").addClass("btn-default");

            $("#btnGastos").addClass("active");
            $("#btnGastos").addClass("btn-basic");
            $("#btnGastos").removeClass("btn-default");
            $("#divGastos").removeClass("hidden");
            $("#divIngresos").addClass("hidden");
        }
        else {
            $("#btnGastos").removeClass("active");
            $("#btnGastos").removeClass("btn-basic");
            $("#btnGastos").addClass("btn-default");

            $("#btnIngresos").addClass("active");
            $("#btnIngresos").addClass("btn-basic");
            $("#btnIngresos").removeClass("btn-default");
            $("#divIngresos").removeClass("hidden");
            $("#divGastos").addClass("hidden");
        }
    });


    $('#txtPrecio').numeric(",");


    function EliminarMovimiento(tipo) {
        var parametros = {
            idMovimiento: $("#hdnIdMovimiento").val()
        };
        $.ajax({
            dataType: "json",
            type: "POST",
            url: '@Url.Action("Eliminar", "Cuentas")',
            data: parametros,
            success: function (data) {
                if (data.respuesta == '@Constantes.EstadoCorrecto')
                {
                    swal({
                        title: 'Correcto',
                        text: tipo == 1 ? "El ingreso se ha borrado correctamente" : "El gasto se ha borrado correctamente",
                        type: 'success',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Aceptar'
                    }).then(function (isConfirm) {
                        window.location.href = window.location.href;
                    });


                }
                else
                {
                    swal({
                        title: 'Error',
                        text: tipo == 1 ? "Ocurrió un error al borrar el ingreso" : "Ocurrió un error al borrar el gasto",
                        type: 'error',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Aceptar'
                    }).then(function (isConfirm) {
                        window.location.href = window.location.href;
                    });
                }

            }
        });
    }

    function EliminarMovimientoPaso1(idMovimiento,tipo)
    {
        swal({
            title: '',
            text: tipo == 1 ? "Esta acción eliminará el ingreso" : "Esta acción eliminará el gasto",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Borrar',
            cancelButtonText: 'Cancelar'
        }).then(function (isConfirm) {
            if (isConfirm) {
                $("#hdnIdMovimiento").val(idMovimiento);
                EliminarMovimiento(tipo);
            }

        });
        
    }

    function CargarDatosMovimiento(movimiento)
    {
        var idMovimiento = $(movimiento).data("idmovimiento");
        var idCategoriaMovimiento = $(movimiento).data("idcategoriamovimiento");
        var observaciones = $(movimiento).data("observaciones");
        var monto = $(movimiento).data("monto");
        var fecha = $(movimiento).data("fecha");
        var tipo = $(movimiento).data("ingreso");
        $("#hdnIdMovimiento").val(idMovimiento);
        $("#ddlCategoriasMovimiento").val(idCategoriaMovimiento);
        $("#txtObservaciones").val(observaciones);
        $("#txtMonto").val(monto);
        $("#txtFecha").val(fecha);

        $(".opcionCategoria").addClass("hidden");
        if (tipo) {

            $("#ddlCategoriasMovimiento").find("[data-ingreso='" + 1 + "']").removeClass("hidden");
            $("#lblTipoCategoriaMovimiento").html("Tipo de ingreso");
            $("#tituloMantenimiento").html("Agregar ingreso");
            $("#hdnIngreso").val(true);
        }
        else {

            $("#ddlCategoriasMovimiento").find("[data-ingreso='" + 0 + "']").removeClass("hidden");
            $("#tituloMantenimiento").html("Agregar gasto");
            $("#lblTipoCategoriaMovimiento").html("Tipo de gasto");
            $("#hdnIngreso").val(false);
        }

        $("#divMantenimiento").removeClass("hidden");
        $("#divTablas").addClass("hidden");
        $("#tituloMantenimiento").html("Editar cultivo");
        $(".field-validation-error").css("display", "none");
    }

    function Cancelar()
    {
        $("#ddlCategoriasMovimiento").val("@Guid.Empty")
        $("#txtMonto").val("");
        $("#txtObservaciones").val("");
        $("#hdnIdMovimiento").val("@Guid.Empty");

        $("#divMantenimiento").addClass("hidden");
        $("#divTablas").removeClass("hidden");
        $("#tituloMantenimiento").html("Ingresos/Gastos");
        $(".field-validation-error").css("display", "none");
    }

    function MostrarDivMantenimiento(tipo) {
        $(".opcionCategoria").addClass("hidden");
        $("#ddlCategoriasMovimiento").find("[data-ingreso='" + tipo + "']").removeClass("hidden");
        if (tipo == 1) {
            $("#lblTipoCategoriaMovimiento").html("Tipo de ingreso");
            $("#tituloMantenimiento").html("Agregar ingreso");
            $("#hdnIngreso").val(true);
        }
        else {
            $("#tituloMantenimiento").html("Agregar gasto");
            $("#lblTipoCategoriaMovimiento").html("Tipo de gasto");
            $("#hdnIngreso").val(false);
        }
        $("#divMantenimiento").removeClass("hidden");
        $("#divTablas").addClass("hidden");
        $(".field-validation-error").css("display", "none");
    }

    function OcultarDivMantenimiento() {
        $("#divMantenimiento").removeClass("hidden");
        $("#divTablas").addClass("hidden");
        $(".field-validation-error").css("display", "none");
    }



</script>
<style>
    #btnGuardar, #btnEditar{
        margin-right: 10px;
    }
</style>
